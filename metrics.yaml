# Default metrics collected by this check. You should not have to modify this.
# For confluentplatform.yaml
jmx_metrics:
  # Components Metrics:
  #   - Confluent Global Producer Metrics: https://docs.confluent.io/current/kafka/monitoring.html#global-connection-metrics
  #   - Confluent Replicator Important Producer Metrics: https://docs.confluent.io/current/multi-dc-deployments/replicator/replicator-monitoring.html#important-producer-metrics
  - include:
      domain: kafka.producer
      bean_regex: kafka\.producer:type=producer-metrics,client-id=.*
      attribute:
        # batch-size-avg and batch-size-max:
        # If they are consistently close to the configured batch.size, you may be producing as fast as possible and you’ll want to increase the batch size to get better batching.
        batch-size-avg:
          # The average number of bytes sent per partition per-request.
          alias: confluent.$domain.$attribute
          metric_type: gauge
        batch-size-max:
          # The max number of bytes sent per partition per-request.
          alias: confluent.$domain.$attribute
          metric_type: gauge

        # io-ratio or io-wait-ratio:
        # If the io-ratio is low or io-wait-ratio is high, this means the producer is not very busy and is unlikely to be a bottleneck.
        io-ratio:
          # The fraction of time the I/O thread spent doing I/O
          alias: confluent.$domain.$attribute
          metric_type: gauge
        io-wait-ratio:
          # The fraction of time the I/O thread spent waiting
          alias: confluent.$domain.$attribute
          metric_type: gauge

        # outgoing-byte-rate:
        # Reports the producer throughput when writing to destination Kafka.
        outgoing-byte-rate:
          # The number of outgoing bytes sent to all servers per second
          alias: confluent.$domain.$attribute
          metric_type: gauge

        # record-retry-rate and record-error-rate:
        # The average per-second number of retried record sends and failed record sends for a topic. High number of those can indicate issues writing to the destination cluster.
        record-retry-rate:
          # The average per-second number of retried record sends
          alias: confluent.$domain.$attribute
          metric_type: gauge
        record-error-rate:
          # The average per-second number of record sends that resulted in errors
          alias: confluent.$domain.$attribute
          metric_type: gauge

        # produce-throttle-time-avg and produce-throttle-time-max:
        # Produce requests may be throttled to meet quotas configured on the destination cluster. If these are non-zero, it indicates that the destination brokers are slowing the producer down and the quotas configuration should be reviewed. For more information on quotas see Enforcing Client Quotas.
        produce-throttle-time-avg:
          # The average time in ms a request was throttled by a broker
          alias: confluent.$domain.$attribute
          metric_type: gauge
        produce-throttle-time-max:
          # The maximum time in ms a request was throttled by a broker
          alias: confluent.$domain.$attribute
          metric_type: gauge

        # waiting-threads and bufferpool-wait-time:
        # Non-zero values here indicate memory pressure. Connect producers can’t send events fast enough, resulting in full memory buffers that cause Replicator threads to block.
        waiting-threads:
          # The number of user threads blocked waiting for buffer memory to enqueue their records
          alias: confluent.$domain.$attribute
          metric_type: gauge
        bufferpool-wait-time-total:
          # The total time an appender waits for space allocation.
          alias: confluent.$domain.$attribute
          metric_type: gauge

        # Other useful metrics
        connection-count:
          # The current number of active connections.
          alias: confluent.$domain.$attribute
          metric_type: gauge
        network-io-rate:
          # The number of network operations (reads or writes) on all connections per second
          alias: confluent.$domain.$attribute
          metric_type: gauge
        request-rate:
          # The number of requests sent per second
          alias: confluent.$domain.$attribute
          metric_type: gauge
        response-rate:
          # The number of responses received per second
          alias: confluent.$domain.$attribute
          metric_type: gauge
        request-latency-avg:
          # The average request latency in ms
          alias: confluent.$domain.$attribute
          metric_type: gauge
        io-wait-time-ns-avg:
          # The average length of time the I/O thread spent waiting for a socket ready for reads or writes in nanoseconds.
          alias: confluent.$domain.$attribute
          metric_type: gauge
        connection-creation-rate:
          # New connections established per second in the window.
          alias: confluent.$domain.$attribute
          metric_type: gauge
        connection-close-rate:
          # Connections closed per second in the window.
          alias: confluent.$domain.$attribute
          metric_type: gauge
        io-time-ns-avg:
          # The average length of time for I/O per select call in nanoseconds.
          alias: confluent.$domain.$attribute
          metric_type: gauge
        select-rate:
          # Number of times the I/O layer checked for new I/O to perform per second.
          alias: confluent.$domain.$attribute
          metric_type: gauge
        incoming-byte-rate:
          # The average number of incoming bytes received per second from all servers.
          alias: confluent.$domain.$attribute
          metric_type: gauge

  # Components Metrics:
  #   - Confluent Global Producer Node Metrics: https://docs.confluent.io/current/kafka/monitoring.html#global-connection-metrics
  - include:
      domain: kafka.producer
      bean_regex: kafka\.producer:type=producer-node-metrics,client-id=.*,node-id=.*
      attribute:
        request-size-max:
          # The maximum size of any request sent in the window for a broker.
          alias: confluent.$domain.node.$attribute
          metric_type: gauge
        request-size-avg:
          # The average size of all requests in the window for a broker.
          alias: confluent.$domain.node.$attribute
          metric_type: gauge
        request-rate:
          # The average number of requests sent per second to the broker.
          alias: confluent.$domain.node.$attribute
          metric_type: gauge
        response-rate:
          # The average number of responses received per second from the broker.
          alias: confluent.$domain.node.$attribute
          metric_type: gauge
        incoming-byte-rate:
          # The average number of bytes received per second from the broker.
          alias: confluent.$domain.node.$attribute
          metric_type: gauge
        outgoing-byte-rate:
          # The average number of bytes sent per second to the broker.
          alias: confluent.$domain.node.$attribute
          metric_type: gauge

  # Components Metrics:
  #   - Confluent Global Producer Topic Metrics: https://docs.confluent.io/current/kafka/monitoring.html#per-topic-metrics
  - include:
      domain: kafka.producer
      bean_regex: kafka\.producer:type=producer-topic-metrics,client-id=.*,topic=.*
      attribute:
        byte-rate:
          # The average number of bytes sent per second for a topic.
          alias: confluent.$domain.topic.$attribute
          metric_type: gauge
        record-send-rate:
          # The average number of records sent per second for a topic.
          alias: confluent.$domain.topic.$attribute
          metric_type: gauge
        compression-rate:
          # The average compression rate of record batches for a topic.
          alias: confluent.$domain.topic.$attribute
          metric_type: gauge
        record-retry-rate:
          # The average per-second number of retried record sends for a topic.
          alias: confluent.$domain.topic.$attribute
          metric_type: gauge
        record-error-rate:
          # The average per-second number of record sends that resulted in errors for a topic.
          alias: confluent.$domain.topic.$attribute
          metric_type: gauge

  # Components Metrics:
  #   - Confluent Broker Global Consumer Metrics: https://docs.confluent.io/current/kafka/monitoring.html#consumer-metric-global-connection-metrics
  #   - Confluent Replicator Important Consumer Metrics: https://docs.confluent.io/current/multi-dc-deployments/replicator/replicator-monitoring.html#important-consumer-metrics
  - include:
      domain: kafka.consumer
      bean_regex: kafka\.consumer:type=consumer-metrics,client-id=.*
      attribute:
        # io-ratio or io-wait-ratio:
        # If the io-ratio is low or io-wait-ratio is high, this means the consumer is not very busy and is unlikely to be a bottleneck.
        io-ratio:
          # The fraction of time the I/O thread spent doing I/O
          alias: confluent.$domain.$attribute
          metric_type: gauge
        io-wait-ratio:
          # The fraction of time the I/O thread spent waiting
          alias: confluent.$domain.$attribute
          metric_type: gauge

        # bytes-consumed-rate:
        # Indicates throughput of Replicator reading events from origin cluster.
        bytes-consumed-rate:
          # Indicates throughput of Replicator reading events from origin cluster.
          alias: confluent.$domain.$attribute
          metric_type: gauge

        # fetch-size-avg and fetch-size-max:
        # If they are close to the configured maximum fetch size consistently, it means that Replicator is reading at the maximum possible rate. Increase the maximum fetch size and check if the throughput per task is improved.
        fetch-size-avg:
          # The average number of bytes fetched per request
          alias: confluent.$domain.$attribute
          metric_type: gauge
        fetch-size-max:
          # The maximum number of bytes fetched per request.
          alias: confluent.$domain.$attribute
          metric_type: gauge

        # records-lag-max:
        # The maximum lag in terms of number of records for any partition. An increasing value over time indicates that Replicator is not keeping up with the rate at which events are written to the origin cluster.
        records-lag-max:
          # The maximum lag in terms of number of records for any partition. An increasing value over time indicates that Replicator is not keeping up with the rate at which events are written to the origin cluster.
          alias: confluent.$domain.$attribute
          metric_type: gauge

        # fetch-rate, fetch-size-avg and fetch-size-max:
        # If fetch-rate is high but fetch-size-avg and fetch-size-max are not close to the maximum configured fetch size, perhaps the consumer is “churning”. Try increasing the fetch.min.bytes and fetch.max.wait configuration. This can help the consumer batch more efficiently.
        fetch-rate:
          # The number of fetch requests per second.
          alias: confluent.$domain.$attribute
          metric_type: gauge

        # fetch-throttle-time-max and fetch-throttle-time-avg:
        # Fetch requests may be throttled to meet quotas configured on the origin cluster. If these are non-zero, it indicates that the origin brokers are slowing the consumer down and the quotas configuration should be reviewed. For more information on quotas see Enforcing Client Quotas
        fetch-throttle-time-max:
          # Fetch requests may be throttled to meet quotas configured on the origin cluster. If these are non-zero, it indicates that the origin brokers are slowing the consumer down and the quotas configuration should be reviewed. For more information on quotas see Enforcing Client Quotas
          alias: confluent.$domain.$attribute
          metric_type: gauge
        fetch-throttle-time-avg:
          # Fetch requests may be throttled to meet quotas configured on the origin cluster. If these are non-zero, it indicates that the origin brokers are slowing the consumer down and the quotas configuration should be reviewed. For more information on quotas see Enforcing Client Quotas
          alias: confluent.$domain.$attribute
          metric_type: gauge

        # metrics not listed in official doc, but might be useful to collect
        connection-count:
          # The current number of active connections.
          alias: confluent.$domain.$attribute
          metric_type: gauge
        network-io-rate:
          # The number of network operations (reads or writes) on all connections per second
          alias: confluent.$domain.$attribute
          metric_type: gauge
        request-rate:
          # The number of requests sent per second
          alias: confluent.$domain.$attribute
          metric_type: gauge
        response-rate:
          # The number of responses received per second
          alias: confluent.$domain.$attribute
          metric_type: gauge
        request-latency-avg:
          # The average request latency in ms
          alias: confluent.$domain.$attribute
          metric_type: gauge

  # Confluent Broker Consumer Fetch Metrics: https://docs.confluent.io/current/kafka/monitoring.html#fetch-metrics
  - include:
      domain: kafka.consumer
      bean_regex: kafka\.consumer:type=consumer-fetch-manager-metrics,client-id=([-.\w]+)$
      attribute:
        records-lag-max:
          # The maximum lag in terms of number of records for any partition in this window. An increasing value over time is your best indication that the consumer group is not keeping up with the producers.
          alias: confluent.$domain.fetch.$attribute
          metric_type: gauge
        fetch-size-avg:
          # The average number of bytes fetched per request.
          alias: confluent.$domain.fetch.$attribute
          metric_type: gauge
        fetch-size-max:
          # The maximum number of bytes fetched per request.
          alias: confluent.$domain.fetch.$attribute
          metric_type: gauge
        bytes-consumed-rate:
          # The average number of bytes consumed per second.
          alias: confluent.$domain.fetch.$attribute
          metric_type: gauge
        records-per-request-avg:
          # The average number of records in each request.
          alias: confluent.$domain.fetch.$attribute
          metric_type: gauge
        records-consumed-rate:
          # The average number of records consumed per second.
          alias: confluent.$domain.fetch.$attribute
          metric_type: gauge
        fetch-rate:
          # The number of fetch requests per second.
          alias: confluent.$domain.fetch.$attribute
          metric_type: gauge
        fetch-latency-avg:
          # The average time taken for a fetch request.
          alias: confluent.$domain.fetch.$attribute
          metric_type: gauge
        fetch-latency-max:
          # The max time taken for a fetch request.
          alias: confluent.$domain.fetch.$attribute
          metric_type: gauge
        fetch-throttle-time-avg:
          # The average throttle time in ms. When quotas are enabled, the broker may delay fetch requests in order to throttle a consumer which has exceeded its limit. This metric indicates how throttling time has been added to fetch requests on average.
          alias: confluent.$domain.fetch.$attribute
          metric_type: gauge
        fetch-throttle-time-max:
          # The maximum throttle time in ms.
          alias: confluent.$domain.fetch.$attribute
          metric_type: gauge

  # Confluent Broker Consumer Fetch Topic Metrics: https://docs.confluent.io/current/kafka/monitoring.html#topic-level-fetch-metrics
  - include:
      domain: kafka.consumer
      bean_regex: kafka\.consumer:type=consumer-fetch-manager-metrics,client-id=.*,topic=.*
      attribute:
          fetch-size-avg:
            # The average number of bytes fetched per request for a specific topic.
            alias: confluent.$domain.fetch_topic.$attribute
            metric_type: gauge
          fetch-size-max:
            # The maximum number of bytes fetched per request for a specific topic.
            alias: confluent.$domain.fetch_topic.$attribute
            metric_type: gauge
          bytes-consumed-rate:
            # The average number of bytes consumed per second for a specific topic.
            alias: confluent.$domain.fetch_topic.$attribute
            metric_type: gauge
          records-per-request-avg:
            # The average number of records in each request for a specific topic.
            alias: confluent.$domain.fetch_topic.$attribute
            metric_type: gauge
          records-consumed-rate:
            # The average number of records consumed per second for a specific topic.
            alias: confluent.$domain.fetch_topic.$attribute
            metric_type: gauge

# Confluent Broker Consumer Group Metrics: https://docs.confluent.io/platform/current/kafka/monitoring.html#consumer-group-metrics
  - include:
      domain: kafka.consumer
      bean_regex: kafka\.consumer:type=consumer-coordinator-metrics,client-id=([-.\w]+)$
      attribute:
        assigned-partitions:
          # The number of partitions currently assigned to this consumer.
          alias: confluent.$domain.group.$attribute
          metric_type: gauge
        commit-latency-avg:
          # The average time taken for a commit request.
          alias: confluent.$domain.group.$attribute
          metric_type: gauge
        commit-latency-max:
          # The max time taken for a commit request.
          alias: confluent.$domain.group.$attribute
          metric_type: gauge
        commit-rate:
          # The number of commit calls per second.
          alias: confluent.$domain.group.$attribute
          metric_type: gauge
        heartbeat-rate:
          # The average number of heartbeats per second. After a rebalance, the consumer sends heartbeats to the coordinator to keep itself active in the group. You can control this using the heartbeat.interval.ms setting for the consumer. You may see a lower rate than configured if the processing loop is taking more time to handle message batches. Usually this is OK as long as you see no increase in the join rate.
          alias: confluent.$domain.group.$attribute
          metric_type: gauge
        heartbeat-response-time-max:
          # The max time taken to receive a response to a heartbeat request.
          alias: confluent.$domain.group.$attribute
          metric_type: gauge
        join-rate:
          # The number of group joins per second. Group joining is the first phase of the rebalance protocol. A large value indicates that the consumer group is unstable and will likely be coupled with increased lag.
          alias: confluent.$domain.group.$attribute
          metric_type: gauge
        join-time-avg:
          # The average time taken for a group rejoin. This value can get as high as the configured session timeout for the consumer, but should usually be lower.
          alias: confluent.$domain.group.$attribute
          metric_type: gauge
        join-time-max:
          # The max time taken for a group rejoin. This value should not get much higher than the configured session timeout for the consumer.
          alias: confluent.$domain.group.$attribute
          metric_type: gauge
        last-heartbeat-seconds-ago:
          # The number of seconds since the last controller heartbeat.
          alias: confluent.$domain.group.$attribute
          metric_type: gauge
        sync-rate:
          # The number of group syncs per second. Group synchronization is the second and last phase of the rebalance protocol. Similar to join-rate, a large value indicates group instability.
          alias: confluent.$domain.group.$attribute
          metric_type: gauge
        sync-time-avg:
          # The average time taken for a group sync.
          alias: confluent.$domain.group.$attribute
          metric_type: gauge
        sync-time-max:
          # The max time taken for a group sync.
          alias: confluent.$domain.group.$attribute
          metric_type: gauge

  # Kafka Connect Metrics
  # https://kafka.apache.org/documentation/#connect_monitoring
  - include:
      domain: kafka.connect
      bean: kafka.connect:type=connect-worker-metrics
      attribute:
        connector-count:
          # The number of connectors run in this worker.
          alias: confluent.$domain.worker.$attribute
          metric_type: gauge
        connector-startup-attempts-total:
          # The total number of connector startups that this worker has attempted.
          alias: confluent.$domain.worker.$attribute
          metric_type: gauge
        connector-startup-failure-percentage:
          # The average percentage of this worker's connectors starts that failed.
          alias: confluent.$domain.worker.$attribute
          metric_type: gauge
        connector-startup-failure-total:
          # The total number of connector starts that failed.
          alias: confluent.$domain.worker.$attribute
          metric_type: gauge
        connector-startup-success-percentage:
          # The average percentage of this worker's connectors starts that succeeded.
          alias: confluent.$domain.worker.$attribute
          metric_type: gauge
        connector-startup-success-total:
          # The total number of connector starts that succeeded.
          alias: confluent.$domain.worker.$attribute
          metric_type: gauge
        task-count:
          # The number of tasks run in this worker.
          alias: confluent.$domain.worker.$attribute
          metric_type: gauge
        task-startup-attempts-total:
          # The total number of task startups that this worker has attempted.
          alias: confluent.$domain.worker.$attribute
          metric_type: gauge
        task-startup-failure-percentage:
          # The average percentage of this worker's tasks starts that failed.
          alias: confluent.$domain.worker.$attribute
          metric_type: gauge
        task-startup-failure-total:
          # The total number of task starts that failed.
          alias: confluent.$domain.worker.$attribute
          metric_type: gauge
        task-startup-success-percentage:
          # The average percentage of this worker's tasks starts that succeeded.
          alias: confluent.$domain.worker.$attribute
          metric_type: gauge
        task-startup-success-total:
          # The total number of task starts that succeeded.
          alias: confluent.$domain.worker.$attribute
          metric_type: gauge


  # Kafka Connect Metrics
  # https://kafka.apache.org/documentation/#connect_monitoring
  - include:
      domain: kafka.connect
      bean_regex:
        - kafka\.connect:type=connect-metrics,client-id=.*
      attribute:
        outgoing-byte-rate: 
          # Rate of outgoing bytes
          alias: confluent.$domain.connect_metrics.outgoing_byte_rate
        incoming-byte-rate:
          # Rate of incoming bytes
          alias: confluent.$domain.connect_metrics.incoming_byte_rate
        failed-authentication-rate:
          # Rate of failed authentications
          alias: confluent.$domain.connect_metrics.failed_authentication_rate
        successful-authentication-rate:
          # Rate of successful authentication
          alias: confluent.$domain.connect_metrics.successful_authentication_rate
        failed-authentication-total:
          # Total amount of failed authentications
          alias: confluent.$domain.connect_metrics.failed_authentication_total
        successful-authentication-total:
          # Total amount of failed authentications
          alias: confluent.$domain.connect_metrics.successful_authentication_total

  # Kafka Connect Metrics
  # https://kafka.apache.org/documentation/#connect_monitoring
  - include:
      domain: kafka.connect
      bean_regex:
        - kafka\.connect:type=connector-metrics,connector=.*
      tags:
        connector: $0
      attribute:
        status:
          # Status of the connector (string)
          metric_type: gauge
          alias: confluent.$domain.connector_metrics.status
          values:
                "unassigned": 0
                "running": 1
                "paused": 2
                "falied": 3
                "destroyed": 4

  # Kafka Connect Metrics
  # https://kafka.apache.org/documentation/#connect_monitoring
  - include:
      domain: kafka.connect
      bean_regex:
        # The bean should `connect-worker-metrics` but in practice the type is `connector-metrics`
        # We are supporting both while the issue is solved: https://issues.apache.org/jira/browse/KAFKA-9790
        # Issue above is solved. Leaving for backwards compatibility.
        - kafka\.connect:type=connect-worker-metrics,connector=.*
        - kafka\.connect:type=connector-metrics,connector=.*
      attribute:
        connector-destroyed-task-count:
          # The number of destroyed tasks of the connector on the worker.
          alias: confluent.$domain.worker.$attribute
          metric_type: gauge
        connector-failed-task-count:
          # The number of failed tasks of the connector on the worker.
          alias: confluent.$domain.worker.$attribute
          metric_type: gauge
        connector-paused-task-count:
          # The number of paused tasks of the connector on the worker.
          alias: confluent.$domain.worker.$attribute
          metric_type: gauge
        connector-running-task-count:
          # The number of running tasks of the connector on the worker.
          alias: confluent.$domain.worker.$attribute
          metric_type: gauge
        connector-total-task-count:
          # The number of tasks of the connector on the worker.
          alias: confluent.$domain.worker.$attribute
          metric_type: gauge
        connector-unassigned-task-count:
          # The number of unassigned tasks of the connector on the worker.
          alias: confluent.$domain.worker.$attribute
          metric_type: gauge

  # Kafka Connect Metrics
  # https://kafka.apache.org/documentation/#connect_monitoring
  - include:
      domain: kafka.connect
      bean: kafka.connect:type=connect-worker-rebalance-metrics
      attribute:
        completed-rebalances-total:
          # The total number of rebalances completed by this worker.
          alias: confluent.$domain.worker_rebalance.$attribute
          metric_type: gauge
        epoch:
          # The epoch or generation number of this worker.
          alias: confluent.$domain.worker_rebalance.$attribute
          metric_type: gauge
        rebalance-avg-time-ms:
          # The average time in milliseconds spent by this worker to rebalance.
          alias: confluent.$domain.worker_rebalance.$attribute
          metric_type: gauge
        rebalance-max-time-ms:
          # The maximum time in milliseconds spent by this worker to rebalance.
          alias: confluent.$domain.worker_rebalance.$attribute
          metric_type: gauge
        rebalancing:
          # Whether this worker is currently rebalancing.
          alias: confluent.$domain.worker_rebalance.$attribute
          metric_type: gauge
        time-since-last-rebalance-ms:
          # The time in milliseconds since this worker completed the most recent rebalance.
          alias: confluent.$domain.worker_rebalance.$attribute
          metric_type: gauge

  # Kafka Connect Task Metrics
  # https://kafka.apache.org/documentation/#connect_monitoring
  - include:
      domain: kafka.connect
      bean_regex: kafka\.connect:type=connector-task-metrics,connector=.*,task=.*
      attribute:
        batch-size-avg:
          # The average size of the batches processed by the connector.
          alias: confluent.$domain.connector_task.$attribute
          metric_type: gauge
        batch-size-max:
          # The maximum size of the batches processed by the connector.
          alias: confluent.$domain.connector_task.$attribute
          metric_type: gauge
        offset-commit-avg-time-ms:
          # The average time in milliseconds taken by this task to commit offsets.
          alias: confluent.$domain.connector_task.$attribute
          metric_type: gauge
        offset-commit-failure-percentage:
          # The average percentage of this task's offset commit attempts that failed.
          alias: confluent.$domain.connector_task.$attribute
          metric_type: gauge
        offset-commit-max-time-ms:
          # The maximum time in milliseconds taken by this task to commit offsets.
          alias: confluent.$domain.connector_task.$attribute
          metric_type: gauge
        offset-commit-success-percentage:
          # The average percentage of this task's offset commit attempts that succeeded.
          alias: confluent.$domain.connector_task.$attribute
          metric_type: gauge
        pause-ratio:
          # The fraction of time this task has spent in the pause state.
          alias: confluent.$domain.connector_task.$attribute
          metric_type: gauge
        running-ratio:
          # The fraction of time this task has spent in the running state.
          alias: confluent.$domain.connector_task.$attribute
          metric_type: gauge

  # Kafka Connect Sink Metrics
  # https://kafka.apache.org/documentation/#connect_monitoring
  - include:
      domain: kafka.connect
      bean_regex: kafka\.connect:type=sink-task-metrics,connector=.*,task=.*
      attribute:
        offset-commit-completion-rate:
          # The average per-second number of offset commit completions that were completed successfully.
          alias: confluent.$domain.sink_task.$attribute
          metric_type: gauge
        offset-commit-completion-total:
          # The total number of offset commit completions that were completed successfully.
          alias: confluent.$domain.sink_task.$attribute
          metric_type: gauge
        offset-commit-seq-no:
          # The current sequence number for offset commits.
          alias: confluent.$domain.sink_task.$attribute
          metric_type: gauge
        offset-commit-skip-rate:
          # The average per-second number of offset commit completions that were received too late and skipped/ignored.
          alias: confluent.$domain.sink_task.$attribute
          metric_type: gauge
        offset-commit-skip-total:
          # The total number of offset commit completions that were received too late and skipped/ignored.
          alias: confluent.$domain.sink_task.$attribute
          metric_type: gauge
        partition-count:
          # The number of topic partitions assigned to this task belonging to the named sink connector in this worker.
          alias: confluent.$domain.sink_task.$attribute
          metric_type: gauge
        put-batch-avg-time-ms:
          # The average time taken by this task to put a batch of sinks records.
          alias: confluent.$domain.sink_task.$attribute
          metric_type: gauge
        put-batch-max-time-ms:
          # The maximum time taken by this task to put a batch of sinks records.
          alias: confluent.$domain.sink_task.$attribute
          metric_type: gauge
        sink-record-active-count:
          # The number of records that have been read from Kafka but not yet completely committed/flushed/acknowledged by the sink task.
          alias: confluent.$domain.sink_task.$attribute
          metric_type: gauge
        sink-record-active-count-avg:
          # The average number of records that have been read from Kafka but not yet completely committed/flushed/acknowledged by the sink task.
          alias: confluent.$domain.sink_task.$attribute
          metric_type: gauge
        sink-record-active-count-max:
          # The maximum number of records that have been read from Kafka but not yet completely committed/flushed/acknowledged by the sink task.
          alias: confluent.$domain.sink_task.$attribute
          metric_type: gauge
        sink-record-lag-max:
          # The maximum lag in terms of number of records that the sink task is behind the consumer's position for any topic partitions.
          alias: confluent.$domain.sink_task.$attribute
          metric_type: gauge
        sink-record-read-rate:
          # The average per-second number of records read from Kafka for this task belonging to the named sink connector in this worker. This is before transformations are applied.
          alias: confluent.$domain.sink_task.$attribute
          metric_type: gauge
        sink-record-read-total:
          # The total number of records read from Kafka by this task belonging to the named sink connector in this worker, since the task was last restarted.
          alias: confluent.$domain.sink_task.$attribute
          metric_type: gauge
        sink-record-send-rate:
          # The average per-second number of records output from the transformations and sent/put to this task belonging to the named sink connector in this worker. This is after transformations are applied and excludes any records filtered out by the transformations.
          alias: confluent.$domain.sink_task.$attribute
          metric_type: gauge
        sink-record-send-total:
          # The total number of records output from the transformations and sent/put to this task belonging to the named sink connector in this worker, since the task was last restarted.
          alias: confluent.$domain.sink_task.$attribute
          metric_type: gauge

  # Kafka Connect Source Tasks Metrics
  # https://kafka.apache.org/documentation/#connect_monitoring
  - include:
      domain: kafka.connect
      bean_regex: kafka\.connect:type=source-task-metrics,connector=.*,task=.*
      attribute:
        poll-batch-avg-time-ms:
          # The average time in milliseconds taken by this task to poll for a batch of source records.
          alias: confluent.$domain.source_task.$attribute
          metric_type: gauge
        poll-batch-max-time-ms:
          # The maximum time in milliseconds taken by this task to poll for a batch of source records.
          alias: confluent.$domain.source_task.$attribute
          metric_type: gauge
        source-record-active-count:
          # The number of records that have been produced by this task but not yet completely written to Kafka.
          alias: confluent.$domain.source_task.$attribute
          metric_type: gauge
        source-record-active-count-avg:
          # The average number of records that have been produced by this task but not yet completely written to Kafka.
          alias: confluent.$domain.source_task.$attribute
          metric_type: gauge
        source-record-active-count-max:
          # The maximum number of records that have been produced by this task but not yet completely written to Kafka.
          alias: confluent.$domain.source_task.$attribute
          metric_type: gauge
        source-record-poll-rate:
          # The average per-second number of records produced/polled (before transformation) by this task belonging to the named source connector in this worker.
          alias: confluent.$domain.source_task.$attribute
          metric_type: gauge
        source-record-poll-total:
          # The total number of records produced/polled (before transformation) by this task belonging to the named source connector in this worker.
          alias: confluent.$domain.source_task.$attribute
          metric_type: gauge
        source-record-write-rate:
          # The average per-second number of records output from the transformations and written to Kafka for this task belonging to the named source connector in this worker. This is after transformations are applied and excludes any records filtered out by the transformations.
          alias: confluent.$domain.source_task.$attribute
          metric_type: gauge
        source-record-write-total:
          # The number of records output from the transformations and written to Kafka for this task belonging to the named source connector in this worker, since the task was last restarted.
          alias: confluent.$domain.source_task.$attribute
          metric_type: gauge

  # Kafka Connect Task Error Metrics
  # https://kafka.apache.org/documentation/#connect_monitoring
  - include:
      domain: kafka.connect
      bean_regex: kafka\.connect:type=task-error-metrics,connector=.*,task=.*
      attribute:
        deadletterqueue-produce-failures:
          # The number of failed writes to the dead letter queue.
          alias: confluent.$domain.task_error.$attribute
          metric_type: gauge
        deadletterqueue-produce-requests:
          # The number of attempted writes to the dead letter queue.
          alias: confluent.$domain.task_error.$attribute
          metric_type: gauge
        last-error-timestamp:
          # The epoch timestamp when this task last encountered an error.
          alias: confluent.$domain.task_error.$attribute
          metric_type: gauge
        total-errors-logged:
          # The number of errors that were logged.
          alias: confluent.$domain.task_error.$attribute
          metric_type: gauge
        total-record-errors:
          # The number of record processing errors in this task.
          alias: confluent.$domain.task_error.$attribute
          metric_type: gauge
        total-record-failures:
          # The number of record processing failures in this task.
          alias: confluent.$domain.task_error.$attribute
          metric_type: gauge
        total-records-skipped:
          # The number of records skipped due to errors.
          alias: confluent.$domain.task_error.$attribute
          metric_type: gauge
        total-retries:
          # The number of operations retried.
          alias: confluent.$domain.task_error.$attribute
          metric_type: gauge
